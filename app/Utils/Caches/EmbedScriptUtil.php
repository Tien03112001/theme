<?php
/**
 * Created by PhpStorm.
 * User: BaoHoang
 * Date: 5/26/2022
 * Time: 12:15
 */

namespace App\Utils\Caches;


use App\Common\Exceptions\ObjectInvalidCastException;
use App\Models\EmbedScript;
use App\Repository\EmbedScriptRepositoryInterface;

class EmbedScriptUtil extends AbstractCacheDataUtil
{

    /**
     * @return EmbedScriptUtil
     */
    public static function getInstance()
    {
        return parent::getInstance(); // TODO: Change the autogenerated stub
    }

    public function __construct()
    {
        parent::__construct('embed_scripts', EmbedScriptRepositoryInterface::class, EmbedScript::class);
    }

    /**
     * @throws ObjectInvalidCastException
     */
    public function loadCacheData()
    {
        if ($this->repository instanceof EmbedScriptRepositoryInterface) {
            $models = $this->repository->get([], 'priority:desc');
            $header = [];
            $body = [];
            foreach ($models as $model) {
                if ($model instanceof EmbedScript) {
                    if ($model->type == 1) {
                        array_push($header, $model->code);
                    }
                    if ($model->type == 2) {
                        array_push($body, $model->code);
                    }
                } else {
                    throw new ObjectInvalidCastException(EmbedScript::class);
                }
            }
            $this->data['header'] = $header;
            $this->data['body'] = $body;
        } else {
            throw new ObjectInvalidCastException(EmbedScriptRepositoryInterface::class);
        }
    }

    public function cacheData()
    {
        return parent::cacheKeyValueData();
    }


    public function getHeaderCode()
    {
        return $this->getCachedValue('header');
    }

    public function getBodyCode()
    {
        return $this->getCachedValue('body');
    }

}
