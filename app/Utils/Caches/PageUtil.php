<?php
/**
 * Created by PhpStorm.
 * User: BaoHoang
 * Date: 5/26/2022
 * Time: 12:15
 */

namespace App\Utils\Caches;


use App\Common\Enum\StatusEnum;
use App\Common\WhereClause;
use App\Models\Page;
use App\Repository\PageRepositoryInterface;

class PageUtil extends AbstractCacheDataUtil
{

    public function __construct()
    {
        parent::__construct('pages', PageRepositoryInterface::class, Page::class);
    }

    /**
     * @return PageUtil
     */
    public static function getInstance()
    {
        return parent::getInstance(); // TODO: Change the autogenerated stub
    }


    public function loadCacheData()
    {
        if ($this->repository instanceof PageRepositoryInterface) {
            $models = $this->repository->get(
                [WhereClause::query('published', StatusEnum::ACTIVE)],
                'id:desc',
                ['meta', 'structured_datas', 'article']
            );
            foreach ($models as $model) {
                if ($model instanceof Page) {
                    $model->append('view_html');
                    $this->data[$model->slug] = $model->toArray();
                }
            }
        }
    }

    public function cacheData()
    {
        return $this->cacheKeyValueData();
    }

    public function getCachedValue($key, $default = [])
    {
        $array = parent::getCachedValue($key, $default);
        return json_decode(json_encode($array), false);
    }

}